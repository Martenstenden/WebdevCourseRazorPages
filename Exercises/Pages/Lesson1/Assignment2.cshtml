@page
@model Exercises.Pages.Lesson1.Exercise2

@{
    Layout = null;
}

@{
<<<<<<< HEAD
    string url = "?";
    <a href="?directions=Left&directions=Right&directions=Forward&directions=Backward"></a>
=======
    string url = "?" + string.Join("&", Model.Directions.Select(x => $"directions={x}"));
    //!!!!zelfde als onderstaande code!!!!
    
    // string url = "?";
    // int directionsCount = Model.Directions.Count;
    // for (int i = 0; i < directionsCount; i++)
    // {
    //     url += "directions=" + Model.Directions[i];
    //     if (i + 1 < directionsCount)
    //     {
    //         url += "&";
    //     }
    // }
>>>>>>> parent of 290bebc (removed answer exercises 2)
}

<a href="@url&directions=Left">Left</a>
<a href="@url&directions=Right">Right</a>
<a href="@url&directions=Forward">Forward</a>
<a href="@url&directions=Backward">Backward</a>
<<<<<<< HEAD
<!-- voeg zelf de andere richtingen toe -->
=======
>>>>>>> parent of 290bebc (removed answer exercises 2)

<hr>
<a href="?">Clear</a>
<hr>

<ul id="route">
    @foreach (var direction in Model.Directions)
    {
        switch(direction)
        {
            case Exercise2.Direction.Left: 
                <li>Left</li> 
<<<<<<< HEAD
            case Exercise2.Direction.Right:
                <li>Right</li>
=======
            break;
            case Exercise2.Direction.Right: 
                <li>Right</li> 
            break;
            case Exercise2.Direction.Forward: 
                <li>Forward</li> 
            break;
            case Exercise2.Direction.Backward: 
                <li>Backward</li> 
            break;
>>>>>>> parent of 290bebc (removed answer exercises 2)
        } 
    }
</ul>
